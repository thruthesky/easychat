rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Master can change all the fields.
    // Moderator can only change some of the fields.
    // Chat members can only add or delete their own uid into `users` field.
    match /easychat/{room} {
      allow get: if true;
      allow list: if true;
      allow create: if 

      required(['master', 'createdAt', 'group', 'open']) &&
      request.resource.data.master == request.auth.uid;
      
      allow update: if false;
      allow delete: if false;
      match /users/{userId} {
        allow create: if isMaster(room) || isModerator(room) || (isOpen(room) && isMyself());
        allow delete: if request.auth.uid == userId;
      }
    }
    

    match /readonly/{documentId} {
      allow read: if true;
      allow write: if false;
    }
    match /users/{documentId} {
      allow read, write: if true;
    }

    function roomData(roomId) {
      return get(/databases/$(database)/documents/easychat/$(roomId)).data;
    }
    function isMaster(roomId) {
      return  roomData(roomId).master == request.auth.uid;
    }
    function isModerator(roomId) {
      return 'moderators' in roomData(roomId) && roomData(roomId).moderators.hasAny([request.auth.uid]);
    }
    function isMyself() {
      return 'uid' in request.resource.data && request.resource.data.uid == request.auth.uid;
    }
    function isOpen(roomId) {
      return 'open' in roomData(roomId) && roomData(roomId).open;
    }
  }

}

// * Warning : It's check the fields after save.
// * Warning : !!! It's not checking the incoming data fields !!!
function required(fields) {
  return request.resource.data.keys().hasAll( fields );
}
